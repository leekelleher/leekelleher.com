<rss xmlns:a10="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Lee Kelleher - Umbraco</title><link>https://leekelleher.com/</link><description>Latest Umbraco posts by Lee Kelleher - Umbraco Consultant</description><language>en-GB</language><lastBuildDate>Fri, 08 Jan 2021 14:17:53 Z</lastBuildDate><generator>Wyam</generator><image><url>https://leekelleher.com/assets/img/northbynorthwest_300x300.jpg</url><title>Lee Kelleher - Umbraco</title><link>https://leekelleher.com/</link></image><a10:link rel="self" href="https://leekelleher.com/tag/umbraco/feed/"/><item><guid isPermaLink="true">https://leekelleher.com/2020/01/clientdependency-filters-manipulate-html</guid><link>https://leekelleher.com/2020/01/clientdependency-filters-manipulate-html</link><title>Using ClientDependency Filters to manipulate HTML</title><description>&lt;p&gt;On a recent Umbraco project, I needed to be able to manipulate the HTML contents before it was sent to the browser.&lt;/p&gt;
&lt;p&gt;Typically, on Umbraco projects you'd do whatever you need do within Razor templating, but in my case, I had to do after the entire page markup was built. &lt;em&gt;(I won't go into details, as the requirement is specific to my client project.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;My initial thought for the solution was using a &lt;code&gt;Request.Filter&lt;/code&gt;. I'd done this previously in my ASP.NET WebForms days - even open-sourced a packaged called &lt;a href="https://our.umbraco.com/packages/website-utilities/safe-mail-link"&gt;Safe Mail Link&lt;/a&gt; that utilised this approach, &lt;em&gt;(it would encode/protect any email addresses found in the markup)&lt;/em&gt;. The guts of the &lt;code&gt;Request.Filter&lt;/code&gt; came from &lt;a href="https://weblog.west-wind.com/posts/2009/nov/13/capturing-and-transforming-aspnet-output-with-responsefilter"&gt;Rick Strahl's &lt;code&gt;ResponseFilterStream&lt;/code&gt; blog post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Given the original &lt;code&gt;ResponseFilterStream&lt;/code&gt; code was originally posted over 10 years ago, &lt;em&gt;(wow!)&lt;/em&gt; I wasn't sure whether the approach would work with latest Umbraco &lt;em&gt;(v8 is ASP.NET MVC 5)&lt;/em&gt;. Turns out, it does!&lt;/p&gt;
&lt;p&gt;As I started to implement this approach, I recalled that the ClientDependency library &lt;em&gt;(which ships with Umbraco)&lt;/em&gt; uses a &lt;code&gt;HttpModule&lt;/code&gt; to manipulate the HTML output to insert references to its bundled CSS &amp;amp; JS assets. So, thought it best to look at the source-code.&lt;/p&gt;
&lt;p&gt;...and as it happens, &lt;a href="https://github.com/Shazwazza/ClientDependency/blob/v1.9.8/ClientDependency.Core/Module/ClientDependencyModule.cs"&gt;&lt;code&gt;ClientDependencyModule&lt;/code&gt;&lt;/a&gt; has a lovely undocumented feature in there... its very own &lt;a href="https://github.com/Shazwazza/ClientDependency/blob/v1.9.8/ClientDependency.Core/Module/IFilter.cs"&gt;&lt;code&gt;IFilter&lt;/code&gt;&lt;/a&gt; interface.  This enables you to piggyback ClientDependency's &lt;code&gt;HttpModule&lt;/code&gt; and manipulate the HTML with your own code!&lt;/p&gt;
&lt;p&gt;After &lt;a href="https://github.com/Shazwazza/ClientDependency/blob/v1.9.8/ClientDependency.Core/Module/ClientDependencyModule.cs#L126-L142"&gt;a small bit of reverse-engineering&lt;/a&gt;, &lt;em&gt;(I know, I know, it's all open-source ... so I mean "researching")&lt;/em&gt;, I had a working prototype! Here's a reduced example (for Umbraco v8) ...&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;&lt;span style="color:#0000FF;"&gt;using&lt;/span&gt; System.Configuration;
&lt;span style="color:#0000FF;"&gt;using&lt;/span&gt; System.Web;
&lt;span style="color:#0000FF;"&gt;using&lt;/span&gt; ClientDependency.Core.Config;
&lt;span style="color:#0000FF;"&gt;using&lt;/span&gt; ClientDependency.Core.Module;
&lt;span style="color:#0000FF;"&gt;using&lt;/span&gt; Umbraco.Core;
&lt;span style="color:#0000FF;"&gt;using&lt;/span&gt; Umbraco.Web.Composing;

&lt;span style="color:#0000FF;"&gt;namespace&lt;/span&gt; Umbraco.Community.Web
{
    &lt;span style="color:#0000FF;"&gt;public&lt;/span&gt; &lt;span style="color:#0000FF;"&gt;class&lt;/span&gt; UpdateHtmlExampleComposer : IUserComposer
    {
        &lt;span style="color:#0000FF;"&gt;public&lt;/span&gt; &lt;span style="color:#0000FF;"&gt;void&lt;/span&gt; Compose(Composition composition)
        {
            ClientDependencySettings.Instance.ConfigSection.Filters
                .Add(&lt;span style="color:#0000FF;"&gt;new&lt;/span&gt; ProviderSettings(nameof(UpdateHtmlExampleFilter), &lt;span style="color:#0000FF;"&gt;typeof&lt;/span&gt;(UpdateHtmlExampleFilter).GetFullNameWithAssembly()));
        }
    }

    &lt;span style="color:#0000FF;"&gt;public&lt;/span&gt; &lt;span style="color:#0000FF;"&gt;class&lt;/span&gt; UpdateHtmlExampleFilter : IFilter
    {
        &lt;span style="color:#0000FF;"&gt;public&lt;/span&gt; HttpContextBase CurrentContext { &lt;span style="color:#0000FF;"&gt;get&lt;/span&gt;; &lt;span style="color:#0000FF;"&gt;private&lt;/span&gt; &lt;span style="color:#0000FF;"&gt;set&lt;/span&gt;; }

        &lt;span style="color:#0000FF;"&gt;public&lt;/span&gt; &lt;span style="color:#0000FF;"&gt;bool&lt;/span&gt; CanExecute()
        {
            &lt;span style="color:#0000FF;"&gt;return&lt;/span&gt; Current.UmbracoContext?.IsFrontEndUmbracoRequest == &lt;span style="color:#0000FF;"&gt;true&lt;/span&gt;;
        }

        &lt;span style="color:#0000FF;"&gt;public&lt;/span&gt; &lt;span style="color:#0000FF;"&gt;void&lt;/span&gt; SetHttpContext(HttpContextBase ctx) =&amp;gt; CurrentContext = ctx;

        &lt;span style="color:#0000FF;"&gt;public&lt;/span&gt; &lt;span style="color:#0000FF;"&gt;string&lt;/span&gt; UpdateOutputHtml(&lt;span style="color:#0000FF;"&gt;string&lt;/span&gt; html)
        {
            &lt;span style="color:#008000;"&gt;// TODO: Do your HTML updates in here! &lt;/span&gt;
            &lt;span style="color:#008000;"&gt;// ------------------------------------&lt;/span&gt;
            &lt;span style="color:#008000;"&gt;//    o    o/    o     o/    o     o/  &lt;/span&gt;
            &lt;span style="color:#008000;"&gt;//  //|   /|   //|    /|   //|    /|   &lt;/span&gt;
            &lt;span style="color:#008000;"&gt;//   / \  / \   / \   / \   / \   / \  &lt;/span&gt;
            &lt;span style="color:#008000;"&gt;// ------------------------------------&lt;/span&gt;

            &lt;span style="color:#0000FF;"&gt;return&lt;/span&gt; html
                .Replace(&lt;span style="color:#A31515;"&gt;"Headless"&lt;/span&gt;, &lt;span style="color:#A31515;"&gt;"Heartcore"&lt;/span&gt;);
        }

        &lt;span style="color:#008000;"&gt;// NOTE: If ClientDependency's MvcFilter is valid, then I'm cool with that.&lt;/span&gt;
        &lt;span style="color:#0000FF;"&gt;public&lt;/span&gt; &lt;span style="color:#0000FF;"&gt;bool&lt;/span&gt; ValidateCurrentHandler() =&amp;gt; &lt;span style="color:#0000FF;"&gt;true&lt;/span&gt;;
    }
}

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Examples of things you could do with this, could be: minify the HTML markup; inject external scripts before the closing &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; tag, (e.g. &lt;a href="https://instant.page/"&gt;instant.page&lt;/a&gt;); protect/encode email address (a la &lt;a href="https://our.umbraco.com/packages/website-utilities/safe-mail-link"&gt;Safe Mail Link&lt;/a&gt;); or a super-quick way to rename a product across an entire website?&lt;/p&gt;
</description><pubDate>Thu, 16 Jan 2020 10:37:00 Z</pubDate></item><item><guid isPermaLink="true">https://leekelleher.com/2019/02/ending-umco-patreon</guid><link>https://leekelleher.com/2019/02/ending-umco-patreon</link><title>Ending our UMCO Patreon campaign</title><description>&lt;p&gt;This evening Matt &amp;amp; I &lt;a href="https://www.patreon.com/posts/umco-patreon-is-24951765"&gt;posted on our Patreon campaign for UMCO&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'm cross-posting here for posterity...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The UMCO Patreon campaign is ending&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Reflecting back on the past 2 years of running our Patreon campaign, we've had great success and gained quite a few backers (which we are extremely grateful for), but at the same time we've learned a few things about what running a successful campaign actually means for OSS and what the expectations this brings.&lt;/p&gt;
&lt;p&gt;We started our Patreon campaign as a way to explore how we could formalise a support strategy for our UMCO projects. It gave agencies and individuals a way to financially support our packages, whilst keeping them free and open-source. From the outside, it may look like we've succeeded in doing that, but the reality is that the what it brings in, isn't enough to schedule dedicated time to our packages so we are mostly supporting them in our spare time much like we previously had been doing.&lt;/p&gt;
&lt;p&gt;Unfortunately, by having people support us financially, it has also brought additional demands and stresses to our projects that makes supporting them much harder than it was prior to the campaign.&lt;/p&gt;
&lt;p&gt;We started to feel guilty that we weren't showing enough effort to our Patreon supporters. If we took a holiday or had a quiet month, people may wonder what we were up to. Self-guilting ourselves into feeling we needed a constant presence or even to get a patch release out.&lt;/p&gt;
&lt;p&gt;Adding to this, the Patreon model may have given the wrong impression, in that paying $100 a month would entitle an agency to dedicated support of our Umbraco packages. Which would be a gross undervaluing our services.&lt;/p&gt;
&lt;p&gt;Ultimately, Patreon was an experiment and from that experiment we have learned that Patreon isn't the right approach for us.&lt;/p&gt;
&lt;p&gt;We'd like to thank everyone for their support...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To add to this, we still aim on being very active in the Umbraco community, Umbraco core, package development, &lt;a href="https://umbristol.co.uk"&gt;umBristol meetups&lt;/a&gt;... and CodeCabin!&lt;/p&gt;
&lt;p&gt;Speaking of which, this year's &lt;strong&gt;CodeCabin&lt;/strong&gt; is open for applications! Visit &lt;a href="https://codecab.in/"&gt;https://codecab.in/&lt;/a&gt;!&lt;/p&gt;
</description><pubDate>Mon, 25 Feb 2019 20:05:00 Z</pubDate></item><item><guid isPermaLink="true">https://leekelleher.com/2018/12/24days-umbraco-content-apps</guid><link>https://leekelleher.com/2018/12/24days-umbraco-content-apps</link><title>24 Days: Content Apps gold rush</title><description>&lt;p&gt;I wrote an article for this year's &lt;strong&gt;24 Days In Umbraco&lt;/strong&gt; Christmas Calendar, entitled &lt;a href="https://24days.in/umbraco-cms/2018/content-apps-gold-rush/"&gt;Who will win in the Content Apps gold rush?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here's a brief summary...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Content Apps are a new feature in Umbraco v8, there is much interesting in their potential. But will this be done individually or by collaboration?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://24days.in/umbraco-cms/2018/content-apps-gold-rush/"&gt;You can read the article over on the 24 Days In Umbraco 2018 website.&lt;/a&gt;&lt;/p&gt;
</description><pubDate>Fri, 21 Dec 2018 15:46:00 Z</pubDate></item><item><guid isPermaLink="true">https://leekelleher.com/2018/11/history-of-our-umbraco-package-names</guid><link>https://leekelleher.com/2018/11/history-of-our-umbraco-package-names</link><title>History of "Our.Umbraco.*" package names</title><description>&lt;p&gt;Earlier this year, &lt;a href="https://twitter.com/callumbwhyte/status/820641163334053889"&gt;Callum asked the question&lt;/a&gt;…&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Can someone explain the history behind the "Our.Umbraco.X" naming convention for packages? It seems it's used by only a few now #umbraco&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I &lt;a href="https://twitter.com/leekelleher/status/820727834536767488"&gt;replied at the time&lt;/a&gt; - but felt an explanation longer than a couple of tweets would be nice, (and findable for future reference). I had a draft of this post sitting around for a while now, thought best to publish it!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.flickr.com/photos/rikhelsen/6269167834/in/album-72157627950157764/" title="Umbraco community hacking"&gt;&lt;img src="/assets/media/umb-collab.jpg" alt="IMG_4590"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When I started to work with Umbraco, back in late 2007, my company was called &lt;strong&gt;Bodenko&lt;/strong&gt;. When we developed any back-office features, they all ended up being bundled into a single project called &lt;strong&gt;"Bodenko.Umbraco"&lt;/strong&gt; - this quickly became a dumping ground for all our extensions.&lt;/p&gt;
&lt;p&gt;After getting more involved with the community, asking a lot of questions on the forum - and starting to answer some of them, I thought that I should really open-source the packages we'd developed at Bodenko. Our first was the &lt;a href="https://our.umbraco.com/packages/developer-tools/robotstxt-editor/"&gt;&lt;strong&gt;Robots.txt Editor&lt;/strong&gt;&lt;/a&gt; (which is surprisingly still popular today - and with very little updates to the original codebase) … I named the assembly &lt;strong&gt;"Bodenko.Umbraco.RobotsTxtEditor"&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In 2009, I'd parted ways with Bodenko to go as a solo freelancer, we dissolved the company. Around this time, I'd attended my first CodeGarden - where they'd launched the new forum… &lt;strong&gt;Our Umbraco&lt;/strong&gt; - it was a very exciting time within the community. The Robots.txt Editor project was due a patch release (roll up of bug fixes), but when I reviewed the code, I felt that my old company name held little relevance to the package itself. There wasn't much point in using the package to "advertise" our old company and services. So, I looked to change it.&lt;/p&gt;
&lt;p&gt;My company name for my freelance work was called &lt;strong&gt;Vertino&lt;/strong&gt;, I could have swapped it with that, but that didn't feel quite right either. Around the same time, I'd noticed there were a few other newly released packages that contained a name/reference to the company that developed them, and it somewhat felt a little &lt;em&gt;anti-community&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Rather than trying to come up with a new base part for my code's namespaces, I did a swap of &lt;strong&gt;"Bodenko"&lt;/strong&gt; with &lt;strong&gt;"Our"&lt;/strong&gt;. I still can't decide if that was a clever idea or I was being lazy - &lt;em&gt;probably the latter&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I never envisaged this as trying to start a convention, then as I got involved with other established Umbraco packages, e.g. &lt;a href="https://our.umbraco.com/packages/developer-tools/config-tree/"&gt;Config Tree&lt;/a&gt; and &lt;a href="https://our.umbraco.com/packages/backoffice-extensions/google-maps-datatype/"&gt;Google Maps DataType&lt;/a&gt;, with the agreement of their developers, we renamed the namespaces and assemblies over time.&lt;/p&gt;
&lt;p&gt;Ironically, we never changed the &lt;a href="https://our.umbraco.com/packages/backoffice-extensions/ucomponents/"&gt;uComponents&lt;/a&gt; namespace or assemblies - considering that at the time, that project was considered to be the &lt;em&gt;de facto&lt;/em&gt; Umbraco community project.&lt;/p&gt;
&lt;p&gt;The idea was that these packages were &lt;strong&gt;made by the Umbraco community, for the Umbraco community&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I didn't push this naming convention, but interestingly I noticed other package developers had started to use it. It had become an unspoken guideline.&lt;/p&gt;
&lt;p&gt;More recently, the packages that I've collaborated on with &lt;a href="https://twitter.com/mattbrailsford"&gt;Matt Brailsford&lt;/a&gt; have generally come from working together at my company &lt;strong&gt;Umbrella&lt;/strong&gt; (where Matt has freelanced with us). However, when we started coding and setting up namespaces, if we used &lt;strong&gt;"Umbrella.Umbraco.*"&lt;/strong&gt; it wouldn't feel quite right. We knew from the outset that certain back-office extensions had the potential to be released as fully-fledged Umbraco packages - we always start out with that mindset… &lt;strong&gt;"for the community"&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;So, if you ever look in your website's &lt;code&gt;/bin&lt;/code&gt; folder and see a bunch of "Our.Umbraco.*" assemblies, then you now know they were developed with the community in mind and are a sign of thoughtful, well-crafted Umbraco packages.&lt;/p&gt;
</description><pubDate>Tue, 27 Nov 2018 10:50:00 Z</pubDate></item><item><guid isPermaLink="true">https://leekelleher.com/2018/01/umco</guid><link>https://leekelleher.com/2018/01/umco</link><title>UMCO</title><description>&lt;p&gt;I've been meaning to talk about UMCO for a while, but Matt got there before me... &lt;a href="https://outfield.digital/blog/what-exactly-is-umco/"&gt;What exactly is UMCO?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.flickr.com/photos/percipientstudios/18087735533/in/album-72157653985426100/" title="Lee and Matt hacking, Photo by Douglas Robar, Percipient Studios"&gt;&lt;img src="https://farm1.staticflickr.com/505/18087735533_6eaf4dfc3b_h.jpg" alt="CG15-1128"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;UMCO Links&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://outfield.digital/umco/"&gt;UMCO profile on Outfield Digital&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/UMCO"&gt;UMCO on GitHub - source-code for our Umbraco packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;s&gt;&lt;a href="https://www.patreon.com/umco"&gt;UMCO Patreon page - if you'd like to support our work&lt;/a&gt;&lt;/s&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://weareumco.com/"&gt;We are UMCO - a landing page, with these links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Tue, 23 Jan 2018 12:38:00 Z</pubDate></item><item><guid isPermaLink="true">https://leekelleher.com/2016/08/codecabin16</guid><link>https://leekelleher.com/2016/08/codecabin16</link><title>Code Cabin 2016</title><description>&lt;p style="text-align:center;"&gt;
	&lt;img src="/assets/media/codecabin16.jpg" alt="Code Cabin logo"&gt;
&lt;/p&gt;
&lt;p&gt;Next weekend will be the inauguration of &lt;a href="http://codecab.in"&gt;Code Cabin&lt;/a&gt;. If you haven't heard about Code Cabin yet, it's a weekend retreat for 20 developers; a chance to get together share ideas and hack some code.&lt;/p&gt;
&lt;p&gt;If you want to know more about the backstory, &lt;a href="https://youtu.be/X4J2Qkqhhpw"&gt;watch the uHangout episode&lt;/a&gt; when &lt;a href="https://twitter.com/mattbrailsford"&gt;Matt&lt;/a&gt; announced it back in April.&lt;/p&gt;
&lt;p&gt;All the tickets for this Code Cabin sold out before the end of June, but if it sounds like something that you'd like to come along to in future, be sure to &lt;a href="https://twitter.com/codecabin"&gt;follow &amp;#64;codecabin on Twitter&lt;/a&gt; for any announcements.&lt;/p&gt;
&lt;p&gt;If you want to know what we get up to next week, we'll be tweeting with the hashtag &lt;a href="https://twitter.com/hashtag/codecabin16"&gt;#codecabin16&lt;/a&gt;!&lt;/p&gt;
</description><pubDate>Sun, 28 Aug 2016 10:18:00 +0100</pubDate></item><item><guid isPermaLink="true">https://leekelleher.com/2016/06/umbristol-hiatus</guid><link>https://leekelleher.com/2016/06/umbristol-hiatus</link><title>umBristol hiatus</title><description>&lt;p&gt;At our recent &lt;a href="http://www.meetup.com/umBristol/events/230457961/"&gt;umBristol meetup earlier this month&lt;/a&gt;, I announced that there wouldn't be another meet-up until after the summer, &lt;em&gt;as I'll be away on extended holiday; plus, there's &lt;a href="http://codecab.in"&gt;CodeCabin&lt;/a&gt; in early September&lt;/em&gt;. I proposed to the group that if they wanted to organise an umBristol whilst I was away, then I can give them organiser access rights on the &lt;a href="http://www.meetup.com/umBristol/"&gt;Meetup.com group&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now, &lt;em&gt;between you and me&lt;/em&gt;, I'm hoping that someone steps up to the mark on this.  Along with &lt;a href="https://twitter.com/iomisolutions"&gt;Dan Bramall&lt;/a&gt;, we've been running umBristol for the past 6 years, with over 50 meetups organised, - &lt;em&gt;okay, every other month is a pub social&lt;/em&gt;, but still there's been a certain pressure and demand on us.&lt;/p&gt;
&lt;p&gt;For me, the hardest part about organising an Umbraco user-group has been trying to find people to present on a specific topic. Typically, most umBristol folk are .NET developers, so in-depth technical talks aren't too much of an issue. Yet with more abstract CMS topics, such as content modelling or editorial workflow, I felt that we've been somewhat lacking.&lt;/p&gt;
&lt;p&gt;Truth be told, over the past few years I've become tired with the "lecture" format. It's increasingly difficult for me to sit still and listen for a set period of time.  I find it much more engaging to have a starting topic, and let others get involved with a discussion.  I enjoy learning from a collective experience.&lt;/p&gt;
&lt;p&gt;All things have a life cycle, I guess I've reached that time to take a break and let someone else take the &lt;a href="http://umbristol.co.uk/"&gt;umBristol&lt;/a&gt; reins for a while.&lt;/p&gt;
&lt;p&gt;With all that said, I've met a lot of great people at the meet-ups, many who are now close friends. I'd like to say &lt;strong&gt;a huge &lt;a href="http://h5yr.com"&gt;#h5yr&lt;/a&gt; to all the companies that have hosted our meetups&lt;/strong&gt; and &lt;strong&gt;much love to the umBristol massive, long may it continue!&lt;/strong&gt;&lt;/p&gt;
</description><pubDate>Thu, 23 Jun 2016 15:32:36 +0100</pubDate></item><item><guid isPermaLink="true">https://leekelleher.com/2014/11/11/reflecting-on-predictions-for-umbraco</guid><link>https://leekelleher.com/2014/11/11/reflecting-on-predictions-for-umbraco</link><title>Reflecting on predictions for Umbraco</title><description>&lt;p&gt;Last year a wrote a few &lt;a href="http://leekelleher.com/2013/11/17/predictions-for-umbraco-beyond-2014/"&gt;predictions for Umbraco&lt;/a&gt; – for beyond 2014; a 5-year future.&lt;/p&gt;
&lt;p&gt;Reviewing those predictions, many things have happened in the world of web-development, so I would like to reflect on those.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;node.js&lt;/h3&gt;
&lt;p&gt;The idea of switching Umbraco’s “server-side” codebase from ASP.NET to node.js was quite appealing. Out-the-box it would be cross-platform, high-performance, asynchronous – all win!&lt;/p&gt;
&lt;p&gt;Then &lt;a href="http://blogs.msdn.com/b/dotnet/archive/2014/05/12/the-next-generation-of-net-asp-net-vnext.aspx"&gt;Microsoft announced ASP.NET vNext&lt;/a&gt;! Bringing us… &lt;a href="http://roslyn.codeplex.com/"&gt;Roslyn&lt;/a&gt;! KVM! Cross-platform (Mono)! Async! NuGet! &lt;a href="https://github.com/aspnet"&gt;All open-source&lt;/a&gt;! &lt;strong&gt;&lt;em&gt;BOOM!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://www.reactiongifs.com/wp-content/uploads/2013/10/tim-and-eric-mind-blown.gif" alt="MIND EXPLOSION!"&gt;&lt;/p&gt;
&lt;p&gt;Scott Hanselman covers all this in his post: &lt;a href="http://www.hanselman.com/blog/IntroducingASPNETVNext.aspx"&gt;Introducing ASP.NET vNext&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In a nutshell, ASP.NET vNext has reinvented itself as a killer web-platform for the next decade.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;My revised predication would be that Umbraco will (&lt;em&gt;in time&lt;/em&gt;) fully embrace ASP.NET vNext.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I’d say that the appeal for node.js is great – especially in that it would open up the playing field to great JavaScript developers.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;NoSQL (document database)&lt;/h3&gt;
&lt;p&gt;I still believe that document-databases are better suited for CMS repositories – flexible structures/data-models, etc. I don’t have a favourite “NoSQL” flavour – (although redis and mongodb do get mentioned a lot in my various newsfeeds).&lt;/p&gt;
&lt;p&gt;Would Umbraco ever leave its SQL Server roots? Maybe one day, but I doubt it will happen in the next 5 years – could be one for v12?&lt;/p&gt;
&lt;p&gt;&lt;a href="http://azure.microsoft.com/en-gb/documentation/articles/documentdb-introduction/"&gt;Microsoft have announced DocumentDB&lt;/a&gt;, but that looks to be exclusively for Azure. At least this means someone in Microsoft recognised the need for document-databases on the .NET stack. &lt;em&gt;Food for thought.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;The bifurcation of Umbraco&lt;/h3&gt;
&lt;p&gt;This prediction remains the same. It’s the area that excites and interests me the most.&lt;/p&gt;
&lt;p&gt;To &lt;a href="http://leekelleher.com/2013/11/17/predictions-for-umbraco-beyond-2014/"&gt;quote from last year&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In terms of Umbraco, I think we’ll see a demand for separating the “front-end” from the “back-office”.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;There’ll be teams who will &lt;strong&gt;&lt;em&gt;love the editorial experience&lt;/em&gt;&lt;/strong&gt; that Umbraco offers, but are not willing to be forced to use the front-end technology/framework.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Next week is the annual &lt;a href="http://umbracoukfestival.co.uk/"&gt;Umbraco UK Festival&lt;/a&gt; in London. If you are attending and want to discuss any of these predictions, then feel free to say hello for a chat.&lt;/p&gt;
</description><pubDate>Tue, 11 Nov 2014 13:58:18 Z</pubDate></item><item><guid isPermaLink="true">https://leekelleher.com/2014/05/24/umbristol-hack-night-may-2014</guid><link>https://leekelleher.com/2014/05/24/umbristol-hack-night-may-2014</link><title>umBristol: Hack Night (May 2014)</title><description>&lt;p&gt;Last Thursday evening we held our first &lt;a href="http://umbristol.co.uk/"&gt;umBristol&lt;/a&gt; hack-night. We decided to leave the format&amp;nbsp;of the evening to be an&amp;nbsp;open/clinic style, where anyone could ask questions and guide the focus of session. &amp;nbsp;It turned out that there wasn’t much hacking, but there was a wealth of knowledge to learn and share.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/JoniffRichards"&gt;Jonathan&lt;/a&gt; started off by showing us an extension he’d been working on called&amp;nbsp;&lt;a href="http://www.mayflymedia.co.uk/about-us/tech-breakfast/auto-route-template/"&gt;&lt;strong&gt;AutoRouteTemplate&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;– its aim is to provide a non-developer to access URL parameters in their templates with minimal code. An example of its usage would be a member profile page, where the username is part of the URL structure and the value would be easily accessible within template code. &amp;nbsp;Jonathan is looking to release his code in the near future.&lt;/p&gt;
&lt;p&gt;Next there we talked about who’d used Umbraco 7 and which packages they were using… with the firm favourite being&amp;nbsp;&lt;a href="http://our.umbraco.org/projects/backoffice-extensions/archetype"&gt;&lt;strong&gt;Archetype&lt;/strong&gt;&lt;/a&gt;! &lt;a href="https://twitter.com/johncscott"&gt;John&lt;/a&gt; hadn’t seen Archetype before&amp;nbsp;so we gave a few demonstrations of its uses – included the always impressive “nesting Archetypes within other Archetypes” ;-)&lt;/p&gt;
&lt;p&gt;In a similar vein, &lt;a href="https://twitter.com/iomisolutions"&gt;Dan&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href="https://twitter.com/barryfogarty"&gt;Barry&lt;/a&gt;&amp;nbsp;suggested that we took a look at&amp;nbsp;&lt;a href="http://our.umbraco.org/projects/backoffice-extensions/vorto"&gt;&lt;strong&gt;Vorto&lt;/strong&gt;&lt;/a&gt; – a multilingual property-editor. Which although I was aware of it, I hadn’t actually tried out, so we gave it a spin. &amp;nbsp;All were impressed with its functionality and potential, especially when we added an Archetype within a Vorto property! ;-) &amp;nbsp;If you want to hear more about the Vorto package, watch the recent &lt;a href="https://www.youtube.com/watch?v=fC-Xhj1HnnU"&gt;uHangout interview with Matt Brailsford&lt;/a&gt; for a demo.&lt;/p&gt;
&lt;p&gt;We looked a various new features of Umbraco 7, including&amp;nbsp;&lt;strong&gt;List View.&lt;/strong&gt;&amp;nbsp; Someone ask a question about the Scheduled Publishing functionality, but despite best efforts we weren’t able to get that working on the night. Not sure if there is an issue with the scheduler or that we were doing it wrong? :-(&lt;/p&gt;
&lt;p&gt;I gave a short demo of my content-POCO-mapper package, called&amp;nbsp;&lt;a href="https://github.com/leekelleher/umbraco-ditto"&gt;Ditto&lt;/a&gt; – from showing how to map simple content property on a POCO, to mapping complex values (from Archetype) using custom .NET TypeConverters. &amp;nbsp;I’ll be releasing Ditto very soon, hopefully before &lt;a href="http://codegarden14.com/"&gt;CodeGarden ’14&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Speaking of CodeGarden, there are a few &lt;a href="https://twitter.com/umBristol"&gt;#umBristol&lt;/a&gt; folk attending this year, so we shared a few stories from past CodeGardens and talked about which sessions we were looking forward to at this year’s event.&lt;/p&gt;
&lt;p&gt;Towards the end, Jonathan showed us the Reddit areas that he’d created for &lt;a href="http://www.reddit.com/r/UmbracoCMS/"&gt;/r/UmbracoCMS&lt;/a&gt; and &lt;a href="http://www.reddit.com/r/UmbracoPackages/"&gt;/r/UmbracoPackages&lt;/a&gt;. &amp;nbsp;If you are a Reddit user and are interested in getting involved, but sure to subscribe to those Subreddits!&lt;/p&gt;
&lt;p&gt;Overall the “hack-night” turned out to be more of a casual knowledge sharing session, which I think we were all happy with. Hopefully we all learned something new. &amp;nbsp;I’d like to give a large thank you to &lt;a href="https://twitter.com/johncscott"&gt;John C. Scott&lt;/a&gt; for initiating the hack-night idea and for providing sponsorship of the venue. &lt;a href="http://h5yr.com/"&gt;#h5yr&lt;/a&gt;&lt;/p&gt;
</description><pubDate>Sat, 24 May 2014 19:05:11 +0100</pubDate></item><item><guid isPermaLink="true">https://leekelleher.com/2014/03/25/ucomponents-futures-umbraco-7</guid><link>https://leekelleher.com/2014/03/25/ucomponents-futures-umbraco-7</link><title>uComponents: Days of Future Past</title><description>&lt;p&gt;For a long time I have remained silent on the future of the uComponents project; please don’t mistake this for ignorance, it was not intentional. The truth is that it has been a struggle to lead the project through the transition from Umbraco v6 to v7 … and I’ve probably failed to do.&lt;/p&gt;
&lt;p&gt;The ongoing dilemma of the uComponents project is two-fold: &lt;strong&gt;where are we right now?&lt;/strong&gt; and &lt;strong&gt;where are we heading?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you look at the history of Umbraco and uComponents, you can understand why the project became so important to the community. It was developed during a time when the Umbraco core team’s time, focus and energy were on v5.0 – leaving v4.7 in stalemate. &amp;nbsp;The community continued to use v4.7 and supported itself with a vibrant package ecosystem. &amp;nbsp;Enhancements and features that felt lacking from the v4.7 were cultivated in packages – from &lt;a href="http://our.umbraco.org/projects/backoffice-extensions/ucomponents"&gt;MNTP&lt;/a&gt;, to &lt;a href="http://our.umbraco.org/projects/backoffice-extensions/digibiz-advanced-media-picker"&gt;DAMP&lt;/a&gt;,&amp;nbsp;&lt;a href="http://our.umbraco.org/projects/developer-tools/301-url-tracker"&gt;301 URL Tracker&lt;/a&gt;, to &lt;a href="http://our.umbraco.org/projects/website-utilities/desktop-media-uploader"&gt;Desktop Media Uploader&lt;/a&gt;&amp;nbsp;– looking back, that time felt like the &lt;strong&gt;Golden Age of Umbraco Package Development&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Upon the decision of putting &lt;a href="http://umbraco.com/follow-us/blog-archive/2012/6/13/v5-rip.aspx"&gt;v5 to sleep&lt;/a&gt;, the focus was back on the v4.x core and giving it more love – with this we moved several of the most popular features from uComponents into the Umbraco core (in v4.8). It was an exciting time in the project, as it spurred us to explore ideas and develop better data-types.&lt;/p&gt;
&lt;p&gt;During the evolution of Umbraco v4.x to v6.x – we followed by example – using the new APIs where possible, exploring even more ideas … uComponents was in full flow.&lt;/p&gt;
&lt;p&gt;In early 2013, it was announced that in v7, the back-office UI, (aka project&amp;nbsp;&lt;strong&gt;Belle&lt;/strong&gt;),&amp;nbsp;would be redeveloped using the AngularJs framework. &amp;nbsp;The downside of this decision was that any (now legacy) data-types/property-editors (that&amp;nbsp;used WebForms)&amp;nbsp;would not be supported and backwards-compatibility broken. &amp;nbsp;(It’s not all doom and gloom – the new UI is much better).&lt;/p&gt;
&lt;p&gt;This raised the question… what shall we do? &amp;nbsp;The knee-jerk reaction was to shout “&lt;em&gt;ANGULARJS-ify&amp;nbsp;ALL THE UCOMPONENTS!&lt;/em&gt;“, but this didn’t feel quite right. &amp;nbsp;Since the aim of the Belle UI project was to make a better content editing experience, the last thing I wanted us to do was carelessly rehash the same data-types for v7. I wanted us to have much more consideration, more craftsmanship.&lt;/p&gt;
&lt;p&gt;I posted an open question on the Umbraco community forum – &lt;a href="http://our.umbraco.org/projects/backoffice-extensions/ucomponents/questionssuggestions/46392-uComponents-v7-Expectations"&gt;What would you expect from uComponents in Umbraco 7?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A lot of the responses were saying that they wanted Multi-Node Tree Picker, Multi-Node Tree Picker and, oh, Multi-Node Tree Picker. Despite pointing out a few times that MNTP had been in the core since v4.8 and already had an equivalent property-editor in v7 core. Many of the other replies were words of encouragement and valuable feedback – which was great and very much appreciated, but I felt still no closer to &lt;em&gt;&lt;strong&gt;what&lt;/strong&gt;&lt;/em&gt; uComponents should become.&lt;/p&gt;
&lt;p&gt;The troublesome part of this indecision is that it has put uComponents into its own stalemate. &amp;nbsp;Our &lt;a href="https://ucomponents.codeplex.com/releases/view/97718"&gt;last release&lt;/a&gt; was nearly 6 months ago – which is our longest period of inactivity – &lt;em&gt;this sucks!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;At this point in time, I feel that the viable options for uComponents future are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Release an Umbraco v7 compatible version of uComponents – this means all non-data-type components will work; but no new features/property-editors;&lt;/li&gt;
&lt;li&gt;Start a spin-off project (aka “nuComponents”) that only contains new (AngularJS) property-editors; also means would be a v1.0;&lt;/li&gt;
&lt;li&gt;Start to (slowly) add new (AngularJS) property-editors to the existing uComponents project/codebase; raises many questions of missing equivalent data-types/property-editors.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;One of the beautiful parts of the original uComponents was that everything was available within a single assembly/DLL. This made deployments and upgrades very simple. &amp;nbsp;I’m not sure how this would work within the brave new AngularJS world?&lt;/p&gt;
&lt;p&gt;I’m still very hopefully that uComponents will exist and flourish in future, but it needs your help. &amp;nbsp;If you want to get involved with the next version of uComponents, feel free to &lt;a href="http://leekelleher.com/contact/"&gt;get in touch&lt;/a&gt;, &lt;a href="https://twitter.com/leekelleher"&gt;tweet me&lt;/a&gt;, &lt;a href="https://trello.com/b/drlQKsCF/v7-development"&gt;check the Trello board&lt;/a&gt;, or &lt;a href="https://github.com/uComponents/uComponents/tree/dev-7.0.0"&gt;send a PR on GitHub&lt;/a&gt;.&lt;/p&gt;
</description><pubDate>Tue, 25 Mar 2014 23:31:58 Z</pubDate></item></channel></rss>